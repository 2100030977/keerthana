
deepak reddy@LAPTOP-T2GBFQTB MINGW64 ~
$ ls
'3D Objects'/                                                         NTUSER.DAT{53b39e87-18c4-11ea-a811-000d3aa4692b}.TxR.1.regtrans-ms                             PrintHood@
 AppData/                                                             NTUSER.DAT{53b39e87-18c4-11ea-a811-000d3aa4692b}.TxR.2.regtrans-ms                             PycharmProjects/
'Application Data'@                                                   NTUSER.DAT{53b39e87-18c4-11ea-a811-000d3aa4692b}.TxR.blf                                       Recent@
 Contacts/                                                            NTUSER.DAT{53b39e88-18c4-11ea-a811-000d3aa4692b}.TM.blf                                       'Saved Games'/
 Cookies@                                                             NTUSER.DAT{53b39e88-18c4-11ea-a811-000d3aa4692b}.TMContainer00000000000000000001.regtrans-ms   Searches/
 Desktop/                                                             NTUSER.DAT{53b39e88-18c4-11ea-a811-000d3aa4692b}.TMContainer00000000000000000002.regtrans-ms   SendTo@
 Documents/                                                           NTUSER.DAT{efd714b6-fd36-11ec-a566-709cd1ea1c89}.TxR.0.regtrans-ms                            'Start Menu'@
 Downloads/                                                           NTUSER.DAT{efd714b6-fd36-11ec-a566-709cd1ea1c89}.TxR.1.regtrans-ms                             Templates@
 Favorites/                                                           NTUSER.DAT{efd714b6-fd36-11ec-a566-709cd1ea1c89}.TxR.2.regtrans-ms                             Videos/
 HTML/                                                                NTUSER.DAT{efd714b6-fd36-11ec-a566-709cd1ea1c89}.TxR.blf                                       eclipse/
 Links/                                                               NTUSER.DAT{efd714b7-fd36-11ec-a566-709cd1ea1c89}.TM.blf                                        eclipse-workspace/
'Local Settings'@                                                     NTUSER.DAT{efd714b7-fd36-11ec-a566-709cd1ea1c89}.TMContainer00000000000000000001.regtrans-ms  'exms dbms.xml'
 Music/                                                               NTUSER.DAT{efd714b7-fd36-11ec-a566-709cd1ea1c89}.TMContainer00000000000000000002.regtrans-ms   ntuser.dat.LOG1
'My Documents'@                                                       NetHood@                                                                                       ntuser.dat.LOG2
 NTUSER.DAT                                                           OneDrive/                                                                                      ntuser.ini
 NTUSER.DAT{53b39e87-18c4-11ea-a811-000d3aa4692b}.TxR.0.regtrans-ms   Pictures/                                                                                      psfd/

deepak reddy@LAPTOP-T2GBFQTB MINGW64 ~
$ cd E
bash: cd: E: No such file or directory

deepak reddy@LAPTOP-T2GBFQTB MINGW64 ~
$ cd C
bash: cd: C: No such file or directory

deepak reddy@LAPTOP-T2GBFQTB MINGW64 ~
$ cd c
bash: cd: c: No such file or directory

deepak reddy@LAPTOP-T2GBFQTB MINGW64 ~
$ cd C:

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c
$ ls

'$Recycle.Bin'/   Deepu/                     DumpStack.log.tmp  'Program Files'/         Recovery/                     System.sav@     Windows/       hp/            swapfile.sys
'$WinREAgent'/   'Documents and Settings'@   OneDriveTemp/      'Program Files (x86)'/   SWSetup/                      Users/          XboxGames/     hpswsetup/
 Autodesk/        DumpStack.log              PerfLogs/           ProgramData/           'System Volume Information'/   WhatsappKeys/   hiberfil.sys   pagefile.sys

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c
$

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c
$ cd Deepu:
bash: cd: Deepu:: No such file or directory

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c
$ cd Deepu

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu (master)
$ ls
keerthana/

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu (master)
$ cd keerthana

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ vi text2.txt

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ ls
LICENSE  file1.txt  text2.txt

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ cat text2.txt
ithis is my space ican do anything here because this is my space
so pls quit from here u idiot.
m.Deepak Reddy


deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        text2.txt

nothing added to commit but untracked files present (use "git add" to track)

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git clone https://github.com/2100030977/keerthana.git
Cloning into 'keerthana'...

remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 6 (delta 0), reused 3 (delta 0), pack-reused 0
Receiving objects: 100% (6/6), 12.72 KiB | 3.18 MiB/s, done.

git add

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ dit add text2.txt
bash: dit: command not found

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git add text2.txt
warning: in the working copy of 'text2.txt', LF will be replaced by CRLF the next time Git touches it

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git commit -m
error: switch `m' requires a value

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git commit -m 'my commit'
[main 6240be9] my commit
 1 file changed, 4 insertions(+)
 create mode 100644 text2.txt

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ ls
LICENSE  file1.txt  keerthana/  text2.txt

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        keerthana/

nothing added to commit but untracked files present (use "git add" to track)

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 393 bytes | 393.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/2100030977/keerthana.git
   29fe7e5..6240be9  main -> main

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git init
Reinitialized existing Git repository in C:/Deepu/keerthana/.git/

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git add .
warning: adding embedded git repository: keerthana
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> keerthana
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached keerthana
hint:
hint: See "git help submodule" for more information.

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ ls
LICENSE  file1.txt  keerthana/  text2.txt

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git exit
git: 'exit' is not a git command. See 'git --help'.

The most similar command is
        init

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   keerthana


deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ pwd
/c/Deepu/keerthana

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ ls
LICENSE  file1.txt  keerthana/  text2.txt

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git branch
* main

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git fetch

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git fetch text2.txt
fatal: invalid gitfile format: text2.txt
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git pull
Already up to date.

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$ git fork
git: 'fork' is not a git command. See 'git --help'.

The most similar commands are
        fsck
        hook

deepak reddy@LAPTOP-T2GBFQTB MINGW64 /c/Deepu/keerthana (main)
$

